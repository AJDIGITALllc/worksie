name: Deploy Backend Services and Infrastructure
on:
  push:
    branches:
      - main
    paths:
      - 'services/**'
      - 'infra/terraform/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for authenticating to GCP

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 1. Authenticate to Google Cloud
      # This step uses Workload Identity Federation to authenticate with GCP.
      # You must set up WIF in your GCP project and add the required secrets
      # (WIF_PROVIDER, WIF_SERVICE_ACCOUNT) to your GitHub repository.
      # - name: Authenticate to Google Cloud
      #   id: auth
      #   uses: google-github-actions/auth@v2
      #   with:
      #     workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
      #     service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      # 2. Build and Push the Promoter Docker Image
      # This step would build the Docker image for the promoter service and push it
      # to a container registry like Google Artifact Registry.
      # - name: Build and Push Promoter Image
      #   run: |-
      #     gcloud auth configure-docker us-docker.pkg.dev -q
      #     docker build -t us-docker.pkg.dev/$GCP_PROJECT/worksie/promoter:$GITHUB_SHA services/promoter
      #     docker push us-docker.pkg.dev/$GCP_PROJECT/worksie/promoter:$GITHUB_SHA

      # 3. Deploy Infrastructure with Terraform
      # This section packages the Cloud Function and applies the Terraform configuration.
      # It assumes you have a GCS bucket for storing the function's code.
      - name: Package and Deploy Infrastructure
        run: |
          # Zip the Cloud Function code
          cd services/functions/slo-rollback-fn
          zip -r ../../../slo-rollback-fn.zip .
          cd -

          # Upload the zip to GCS (replace with your bucket name)
          # gsutil cp slo-rollback-fn.zip gs://your-assets-bucket/functions/slo-rollback-fn.zip

          # Apply Terraform changes
          # cd infra/terraform
          # terraform init
          # terraform apply -auto-approve \
          #   -var="project_id=$GCP_PROJECT" \
          #   -var="promoter_image=us-docker.pkg.dev/$GCP_PROJECT/worksie/promoter:$GITHUB_SHA" \
          #   -var="admin_api_url=${{ secrets.ADMIN_API_URL }}" \
          #   -var="admin_api_bearer_token=${{ secrets.ADMIN_API_BEARER_TOKEN }}"
          echo "CI/CD steps are for demonstration. Uncomment and configure them for a real deployment."
