name: Deploy Promoter and SLO Function
on:
  push:
    branches:
      - main
    paths:
      - 'services/promoter/**'
      - 'services/functions/slo-rollback-fn/**'
      - 'infra/terraform/**'

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # NOTE: In a real project, you would set up authentication with GCP
      # using a service account. For example:
      # - id: 'auth'
      #   uses: 'google-github-actions/auth@v2'
      #   with:
      #     credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Build Promoter Service
        run: |
          echo "Simulating Docker build and push for promoter..."
          # gcloud auth configure-docker us-docker.pkg.dev -q
          # docker build -t us-docker.pkg.dev/$GCP_PROJECT/worksie/promoter:$GITHUB_SHA services/promoter
          # docker push us-docker.pkg.dev/$GCP_PROJECT/worksie/promoter:$GITHUB_SHA
          echo "Image: us-docker.pkg.dev/$GCP_PROJECT/worksie/promoter:$GITHUB_SHA"

      - name: Update Promoter Job Image
        run: |
          echo "Simulating gcloud command to update promoter job..."
          # gcloud run jobs update model-promoter \
          #   --image us-docker.pkg.dev/$GCP_PROJECT/worksie/promoter:$GITHUB_SHA \
          #   --region $REGION --quiet
          echo "Promoter job image updated."

      # This section would ideally be in a separate infrastructure CI pipeline
      # that runs when terraform files change.
      - name: Zip slo-rollback-fn
        run: |
          cd services/functions/slo-rollback-fn
          zip -r ../../../slo-rollback-fn.zip .
          cd -
          echo "SLO rollback function zipped to slo-rollback-fn.zip"

      - name: Upload SLO function to GCS
        run: |
          echo "Simulating gsutil command to copy zip..."
          # gsutil cp slo-rollback-fn.zip gs://$ASSETS_BUCKET/functions/slo-rollback-fn.zip
          echo "Function zip uploaded to GCS."

      - name: Terraform Apply
        run: |
          echo "Simulating terraform apply..."
          # cd infra/terraform
          # terraform init
          # terraform apply -auto-approve
          echo "Terraform apply complete."
